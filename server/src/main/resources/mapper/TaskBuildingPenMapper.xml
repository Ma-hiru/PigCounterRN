<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="com.zlz.pigcounter.mapper.TaskBuildingPenMapper">
    <resultMap id="DetailTaskDTOResultMap" type="com.common.pojo.dto.DetailTaskDTO">
        <!-- 主任务字段 -->
        <id property="id" column="task_id"/>
        <result property="taskName" column="task_name"/>
        <result property="employeeId" column="employee_id"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>

        <!-- 楼栋集合 -->
        <collection property="buildings" ofType="com.common.pojo.dto.DetailBuildingDTO"
                   >
            <id property="buildingId" column="building_id"/>
            <result property="buildingName" column="building_name"/>

            <!-- 栏位集合 -->
            <collection property="pens" ofType="com.common.pojo.dto.DetailPenDTO"
                        >
                <id property="penId" column="pen_id"/>
                <result property="penName" column="pen_name"/>
                <result property="outputPicturePath" column="output_picture_path"/>
                <result property="count" column="count"/>
                <result property="picturePath" column="picture_path"/>
                <result property="manualCount" column="manual_count"/>
                <result property="status" column="status"/>
            </collection>
        </collection>
    </resultMap>
    <insert id="insert">
        INSERT INTO task_building_pen (task_id, building_id, pen_id)
        VALUES (#{id}, #{buildingId}, #{penId})
    </insert>
    <insert id="batchInsert">
        INSERT INTO task_building_pen (task_id, building_id, pen_id)
        VALUES
        <foreach collection="list" item="mapItem" separator=",">
            (#{mapItem.taskId}, #{mapItem.buildingId}, #{mapItem.penId})
        </foreach>
    </insert>

    <select id="getTaskDetail" resultMap="DetailTaskDTOResultMap">
        SELECT
        t.id as task_id,
        t.task_name,
        t.start_time,
        t.end_time,
        t.employee_id,
        b.id as building_id,
        b.building_name,
        p.id as pen_id,
        COALESCE(pp.output_picture_path, '') AS output_picture_path,
        COALESCE(pp.count, -1) AS count,
        COALESCE(pp.picture_path, '') AS picture_path,
        COALESCE(pp.manual_count, -1) AS manual_count,
        COALESCE(pp.status,false) AS status,
        p.pen_name
        FROM task t
        LEFT JOIN task_building_pen tbp ON t.id = tbp.task_id
        LEFT JOIN building b ON tbp.building_id = b.id
        LEFT JOIN pen p ON tbp.pen_id = p.id
        LEFT JOIN pen_picture pp ON pp.pen_id = p.id AND pp.task_id = t.id
        WHERE t.id = #{taskId}
    </select>


</mapper>