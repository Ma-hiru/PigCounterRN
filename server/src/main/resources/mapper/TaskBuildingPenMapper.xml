<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="com.zlz.pigcounter.mapper.TaskBuildingPenMapper">
    <resultMap id="DetailTaskDTOResultMap" type="com.common.pojo.dto.DetailTaskDTO">
        <id property="id" column="task_id"/>
        <collection property="buildings" ofType="com.common.pojo.dto.DetailBuildingDTO" column="task_id"
                    javaType="ArrayList" select="getBuildingsByTaskId"/>
    </resultMap>

    <resultMap id="BuildingsDTOResultMap" type="com.common.pojo.dto.DetailBuildingDTO">
        <id property="buildingId" column="building_id"/>
        <collection property="pens" ofType="com.common.pojo.dto.DetailPenDTO" column="{building_id=building_id, task_id=task_id}"
                    javaType="ArrayList" select="getPensByBuildingId"/>
    </resultMap>

    <insert id="insert">
        INSERT INTO task_building_pen (task_id, building_id, pen_id)
        VALUES (#{id}, #{buildingId}, #{penId})
    </insert>
    <insert id="batchInsert">
        INSERT INTO task_building_pen (task_id, building_id, pen_id)
        VALUES
        <foreach collection="list" item="mapItem" separator=",">
            (#{mapItem.taskId}, #{mapItem.buildingId}, #{mapItem.penId})
        </foreach>
    </insert>

    <select id="getTaskDetail" resultMap="DetailTaskDTOResultMap">
        SELECT
        id as task_id,
        task_name,
        start_time,
        end_time,
        employee_id
        FROM
        task
        WHERE
        id = #{taskId}

    </select>

    <select id="getBuildingsByTaskId" resultMap="BuildingsDTOResultMap">
        select  t.building_id , b.building_name , #{task_id} as task_id from (select distinct building_id from task_building_pen where task_id = #{task_id}) as t
        LEFT JOIN building b
        ON t.building_id = b.id
    </select>
    <select id="getPensByBuildingId" resultType="com.common.pojo.dto.DetailPenDTO">
        SELECT
        t.pen_id,
        pp.output_picture_path,
        pp.count,
        pp.picture_path,
        pp.manual_count,
        pp.status,
        p.pen_name
        FROM task_building_pen t
        LEFT JOIN pen p ON p.id = t.pen_id
        LEFT JOIN pen_picture pp
        ON pp.pen_id = t.pen_id
        AND pp.task_id = #{task_id}
        WHERE t.building_id = #{building_id} AND t.task_id = #{task_id}
    </select>

</mapper>